// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repository/api/user.go

// Package mock_user is a generated GoMock package.
package mock_user

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/test-netzme/internal/model/entity"
)

// MockUserAPI is a mock of UserAPI interface.
type MockUserAPI struct {
	ctrl     *gomock.Controller
	recorder *MockUserAPIMockRecorder
}

// MockUserAPIMockRecorder is the mock recorder for MockUserAPI.
type MockUserAPIMockRecorder struct {
	mock *MockUserAPI
}

// NewMockUserAPI creates a new mock instance.
func NewMockUserAPI(ctrl *gomock.Controller) *MockUserAPI {
	mock := &MockUserAPI{ctrl: ctrl}
	mock.recorder = &MockUserAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserAPI) EXPECT() *MockUserAPIMockRecorder {
	return m.recorder
}

// GetRandomUser mocks base method.
func (m *MockUserAPI) GetRandomUser() (entity.UserAPIEntity, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRandomUser")
	ret0, _ := ret[0].(entity.UserAPIEntity)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRandomUser indicates an expected call of GetRandomUser.
func (mr *MockUserAPIMockRecorder) GetRandomUser() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRandomUser", reflect.TypeOf((*MockUserAPI)(nil).GetRandomUser))
}
